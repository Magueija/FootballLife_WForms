<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pb_Delete.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>